version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres
    # !!Note: remove this if you're not using an arm cpu(M1, M2 etc...)
    platform: linux/arm64
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: |
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=10
    env_file:
      - .env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5

  orders-api:
    build:
      context: ./orders-api
      target: development
    container_name: orders-api
    # !!Note: remove this if you're not using an arm cpu(M1, M2 etc...)
    platform: linux/arm64
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      APP_PORT: ${APP_PORT}
      DATABASE_URL: ${DATABASE_URL}
    env_file:
      - ./orders-api/.env
    volumes:
      - ./orders-api/src:/usr/src/app/src
      - ./orders-api/package.json:/usr/src/app/package.json
      - ./orders-api/package-lock.json:/usr/src/app/package-lock.json
      - ./orders-api/tsconfig.json:/usr/src/app/tsconfig.json
      - ./orders-api/nest-cli.json:/usr/src/app/nest-cli.json
    restart: on-failure:5
    command: |
      sh -c "npm run migration:run & npm run start:dev"

volumes:
  postgres_data:
